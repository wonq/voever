{"version":3,"sources":["images/logo.svg","images/icon-instagram.svg","images/icon-youtube.svg","images/icon-tiktok.svg","images/icon-phone.svg","images/icon-email.svg","images/friday-wish.mp4","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","autoPlay","loop","playsInline","src","video","type","title","href","logo","alt","target","rel","instagram","youtube","tiktok","phone","email","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,+QCgG5BC,MArFf,WACE,OACE,yBAAKC,UAAU,aACb,2BACEC,UAAQ,EACRC,MAAI,EACJC,aAAW,GAGX,4BACEC,IAAKC,IAELC,KAAK,eAGT,yBAAKN,UAAU,UACf,wBAAIA,UAAU,QACZ,uBAAGO,MAAM,SAASC,KAAK,KACrB,0BAAMR,UAAU,sBAAhB,UACA,yBAAKI,IAAKK,IAAMC,IAAI,iBAGxB,yBAAKV,UAAU,WACb,wBAAIA,UAAU,WAAd,aACA,uBAAGA,UAAU,eAAb,oGAKF,wBAAIA,UAAU,YACZ,4BACE,uBACEO,MAAM,YACNC,KAAK,2DACLG,OAAO,SACPC,IAAI,uBAEJ,0BAAMZ,UAAU,sBAAhB,aACA,yBAAKI,IAAKS,IAAWH,IAAI,gBAG7B,4BACE,uBACEH,MAAM,UACNC,KAAK,2DACLG,OAAO,SACPC,IAAI,uBAEJ,0BAAMZ,UAAU,sBAAhB,WACA,yBAAKI,IAAKU,IAASJ,IAAI,cAG3B,4BACE,uBACEH,MAAM,SACNC,KAAK,gCACLG,OAAO,SACPC,IAAI,uBAEJ,0BAAMZ,UAAU,sBAAhB,UACA,yBAAKI,IAAKW,IAAQL,IAAI,aAG1B,4BACE,uBAAGH,MAAM,QAAQC,KAAK,uBACpB,0BAAMR,UAAU,sBAAhB,SACA,yBAAKI,IAAKY,IAAON,IAAI,YAGzB,4BACE,uBACEH,MAAM,OACNC,KAAK,iCACLG,OAAO,SACPC,IAAI,uBAEJ,0BAAMZ,UAAU,sBAAhB,QACA,yBAAKI,IAAKa,IAAOP,IAAI,eC5EbQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2573823a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.74d684a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-instagram.181a3e79.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-youtube.d649b89f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-tiktok.920e7152.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-phone.775028bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-email.c81e692a.svg\";","module.exports = __webpack_public_path__ + \"static/media/friday-wish.c5af228d.mp4\";","import React from \"react\";\n\nimport logo from \"./images/logo.svg\";\nimport instagram from \"./images/icon-instagram.svg\";\nimport youtube from \"./images/icon-youtube.svg\";\nimport tiktok from \"./images/icon-tiktok.svg\";\nimport phone from \"./images/icon-phone.svg\";\nimport email from \"./images/icon-email.svg\";\nimport video from \"./images/friday-wish.mp4\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <video\n        autoPlay\n        loop\n        playsInline\n        // muted\n      >\n        <source\n          src={video}\n          // src=\"https://css-tricks-post-videos.s3.us-east-1.amazonaws.com/Island%20-%204141.mp4\"\n          type=\"video/mp4\"\n        />\n      </video>\n      <div className=\"layer\" />\n      <h1 className=\"logo\">\n        <a title=\"Voever\" href=\"/\">\n          <span className=\"screen-reader-text\">Voever</span>\n          <img src={logo} alt=\"voever.com\" />\n        </a>\n      </h1>\n      <div className=\"content\">\n        <h2 className=\"tagline\">coming up</h2>\n        <p className=\"description\">\n          Hold tight as we get our working robots together and produce the most\n          astonishing product ever.\n        </p>\n      </div>\n      <ul className=\"contacts\">\n        <li>\n          <a\n            title=\"Instagram\"\n            href=\"https://instagram.com/voever.studio?igshid=1ahik7usnuxai\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <span className=\"screen-reader-text\">Instagram</span>\n            <img src={instagram} alt=\"instagram\" />\n          </a>\n        </li>\n        <li>\n          <a\n            title=\"Youtube\"\n            href=\"https://www.youtube.com/channel/UCvQt5EHKxby2u8hHx3S7q5w\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <span className=\"screen-reader-text\">Youtube</span>\n            <img src={youtube} alt=\"youtube\" />\n          </a>\n        </li>\n        <li>\n          <a\n            title=\"TikTok\"\n            href=\"https://vt.tiktok.com/yjQGuG/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <span className=\"screen-reader-text\">TikTok</span>\n            <img src={tiktok} alt=\"tiktok\" />\n          </a>\n        </li>\n        <li>\n          <a title=\"Phone\" href=\"tel: +6281296921392\">\n            <span className=\"screen-reader-text\">Phone</span>\n            <img src={phone} alt=\"phone\" />\n          </a>\n        </li>\n        <li>\n          <a\n            title=\"Mail\"\n            href=\"mailto: voeverstudio@gmail.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <span className=\"screen-reader-text\">Mail</span>\n            <img src={email} alt=\"email\" />\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}